# -*- coding: utf-8 -*-
"""Data Science Project 2 - Mulia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19qQ0QPtDorCpu0L0RuUws2GSKSc39jDE
"""

from google.colab import auth
import gspread
from google.auth import default

# Authenticate to Google
auth.authenticate_user()
creds, _ = default()

# Create a client instance
gc = gspread.authorize(creds)

import pandas as pd

worksheet = gc.open('dataset-ecommerce_Mulia').sheet1

rows = worksheet.get_all_values()

df = pd.DataFrame(rows)

df.columns = df.iloc[0]
df = df.iloc[1:]

df.head()

"""# DATA MANIPULASI"""

df.info()

df['Shipping Cost']

"""# Date time"""

#'converting' to date time
df["Order Date"] = pd.to_datetime(df["Order Date"])

#sorting for data in chronological order
df = df.sort_values(by="Order Date")

#Mengghilangkan $ di kolom sales
df["Sales"] = df["Sales"].str.replace("[^\d.]","", regex =True)

df.head()

df.info()

"""# LINE CHART"""

import seaborn as sns
import matplotlib.pyplot as plt

# figure size in inches
plt.rcParams['figure.figsize'] = 15, 7

#rotating x-axis values
plt.xticks(rotation = 'vertical')

#line plot
sns.lineplot(data = df, x='Order Date', y= 'Sales')

#labeling
plt.title(f"Sales Per Order", fontsize=18) #title
plt.xlabel("DATE", fontsize=12) #x-axis label
plt.ylabel("Sales ($)", fontsize=12) #y-axis label

#showing plot
plt.show()

"""#PIE CHART"""

# Dari Ship Mode

data = df['Ship Mode'].value_counts() # banyak data
keys = df['Ship Mode'].unique() #Label

palette_color = sns.color_palette("dark")

plt.pie(data,labels=keys, colors=palette_color, autopct='%.0f%%')
plt.title(f"Ship Mode", fontsize=18)

plt.show()

"""# Bar Chart"""

y = df['Product Category'].value_counts()
x = df['Product Category'].unique()

#Draw Bar
sns.barplot(x=x, y=y, data = df, palette = "pink")

plt.show()

"""# HOMEWORK

buat visualisasi univariate atu bivariarre dari dataset (Gunakan Bar Chart, pie chart atau line chart)

Minimal 5 visual selain yang diatas.

buat insight

## 1. ORDERED In 2015
"""

# Ekstraksi tahun ke dalam kolom baru 'Year'
df['Year'] = df['Order Date'].dt.year

years = df['Year'].unique()
print(years)

df_2015 = df[df['Year'] == 2015]

# Menghitung total order di tahun 2015
total_orders_2015 = df_2015.shape[0]

print("Total Orders in 2015:", total_orders_2015)

df_2016 = df[df['Year'] == 2016]

# menghitung total order pada tahun 2016
total_order_2016 = df_2016.shape[0]

print("Total order tahun 2016 :", total_order_2016)

"""Karena Order 2016 sedikit, jadi bisa **diabaikan.**
Oleh sebab itu grafik hanya menunjukkan total order di 2015 saja
"""

# Filter data untuk tahun 2015
filtered_df = df[(df['Year'] == 2015)]

# Menghitung jumlah order per bulan
monthly_order_counts = filtered_df.groupby(['Year', 'Months'])['Order Date'].count()

# Mengubah indeks menjadi format bulan-tahun
monthly_order_counts.index = pd.to_datetime(monthly_order_counts.index.map(lambda x: f'{x[0]}-{x[1]}-01'))

# Mengurutkan indeks secara terurut
monthly_order_counts = monthly_order_counts.sort_index()

# Membuat line chart
plt.figure(figsize=(10, 6))
plt.plot(monthly_order_counts.index, monthly_order_counts.values, marker='o')

# Atur judul dan label sumbu
plt.title('Monthly Order Counts')
plt.xlabel('Months')
plt.ylabel('Number of Orders')

# Mengatur format tanggal di sumbu x
plt.xticks(rotation=45)

# Menampilkan grid
plt.grid(True)

# Menampilkan line chart
plt.show()

"""### Insight of monthly  order in 2015

1. Grafik menunjukkan total pembelian setiap bulan di tahub 2015

2. Pada bulan Februari pembelian mengalami penurunan namun di bulan berikutnya kembali mengalami kenaikan.

3. Setelah mengalami kenaikan yang cukup signifikan pada bulan maret, pembelian di bulan berikutnya cukup stabil.

## 2. Order Priority
"""

# Dari Order Priority

data = df['Order Priority'].value_counts() # banyak data
keys = df['Order Priority'].unique() #Label

palette_color = sns.color_palette("pink")

plt.pie(data,labels=keys, colors=palette_color, autopct='%.0f%%')
plt.title(f"Order Priotity", fontsize=18)

plt.show()

"""### Insight Order Priority

1. Terdapat 4 kategori dari Order Priority yaitu :
- Critical
- High
- Medium
- Low

2. Medium Priority mendapatkan minat terbanyak yaitu sebesar 57%

3. Low Priority mendapatkan minat terendah yaitu sebesar 5%

## 3. Segment
"""

df['Segment']

data = df['Segment'].value_counts()  # Banyak data
keys = df['Segment'].unique()  # Label

# Buat plot
palette_color = sns.color_palette("pastel")
sizes = data.values  # Menggunakan data.values untuk mengambil nilai jumlah data

plt.pie(sizes, labels=keys, colors=palette_color, autopct='%1.1f%%', startangle=90)
plt.title("Segment", fontsize=18)

# Buat lingkaran tengah pada donat chart (untuk membuatnya menjadi donat chart)
center_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()
fig.gca().add_artist(center_circle)

plt.show()

"""### Insight Segment

1. Terdapat 3 kategori dalam segement:
- Corporate
- Home Office
- Consumer

2. Kelompok Consumer mendapatkankan 51,7% dan merupakan favorite

3. Kelompok Corporate merupakan kelompok terendah dan hanya mendapatkan 18,2%

## 4. Product

Banyak produk yang ada di dataset.
"""

# Mengambil kolom "Product" dari dataset
produk = df['Product']

# Menghitung jumlah produk yang unik
jumlah_produk = len(produk.unique())

# Menampilkan jumlah produk
print("Jumlah Produk:", jumlah_produk)

import matplotlib.pyplot as plt
import pandas as pd

# Menghitung jumlah order untuk setiap produk
product_counts = df['Product'].value_counts()

# Data untuk bar chart
labels = product_counts.index
sizes = product_counts.values

# Buat plot bar chart
plt.figure(figsize=(12, 6))  # Atur ukuran figure
sns.barplot(x=labels, y=sizes, palette="pastel")

# Atur label pada sumbu x
plt.xticks(rotation=90)

# Atur judul dan label sumbu
plt.title('Number of Orders by Product')
plt.xlabel('Product')
plt.ylabel('Number of Orders')

# Tampilkan bar chart
plt.show()

"""### Insight of Product

1. Terdapat 42 produk yang ada di e-commers
2. Sport Wear menjadi produk yang paling banyak dibeli
3. Tehnology menjadi produk yang paling sedikit pembeli.

## Top 5 Most Ordered Product
"""

# Ambil 5 produk dengan jumlah order tertinggi
top_5_products = df['Product'].value_counts().head(5)

# Data untuk donat chart
labels = top_5_products.index
sizes = top_5_products.values

# Warna untuk setiap bagian dalam donat chart
colors = ['skyblue', 'lightcoral', 'lightgreen', 'orange', 'pink']

# Buat plot
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('Top 5 Most Ordered Products')

# Buat lingkaran tengah pada donat chart (untuk membuatnya menjadi donat chart)
center_circle = plt.Circle((0,0), 0.70, fc='white')
fig = plt.gcf()
fig.gca().add_artist(center_circle)

# Tampilkan donat chart
plt.show()

"""### Insight of Top 5 Product

1. 5 produk yang paling banyak di order :


*   Sports Wear
*   Formal Shoes
* Running Shoes
* Titak Watch
* Fossil Watch

2. Pakaian olahraga menjadi produk yang paling banyak di order dari ke 5 top produk dengan hasil 20,3%

## 5. Country
"""

# Menghitung jumlah order untuk setiap negara
country_order_counts = df['Country'].value_counts()

# Mengambil 10 negara dengan jumlah order terbanyak
top_10_countries = country_order_counts.head(10)

# Data untuk horizontal bar chart
countries = top_10_countries.index
order_counts = top_10_countries.values

# Buat plot horizontal bar chart
plt.figure(figsize=(10, 6))
plt.barh(countries, order_counts, color='skyblue')

# Atur judul dan label sumbu
plt.title('Top 10 Countries with the Most Orders')
plt.xlabel('Number of Orders')
plt.ylabel('Country')

# Tampilkan horizontal bar chart
plt.show()

"""### Insight of Country

1. Hanya menampilan 10 negara dengan order terbanyak
2. Pada e-commers ini, United States merupakan negara yang paling banyak melakukan pemesanan.
3. Indonesia merupakan negara ke 10 yang melakukan pemesanan pada e-commers ini dengan total tidak lebih dari 2000 pesanan.
"""